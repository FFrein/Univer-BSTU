#include <iostream>

//выбрать начальную точку
//выбрать непосещённую точку
//рассчитать маршрут от начальной до выбранной
//занести в таблицу кратчайшее расстояние до точки
//пометить точку как посещённую
//повторить алгоритм с пункта 2

void DeykstrFunc(int grph[30][3], int VP[9], int RTP[81][3], int SP = 1) {
	// SP - StartPoint
	int Road; // длинна пути

	VP[SP - 1] = 1; // помечаем начальную точку как посещённую

	for (int i = 0; i <= 9; i++) {
		if (VP[i] != 1) {
			for (int j = 0; j < 30; j++) {
				if (grph[j][0] == i) {

				}
			}
		}
		else {
			continue;
		}
	}
}
/*
 
  A   B   C   D    E    F    G    H    I
= 1   2   3   4    5    6    7    8    9
1 0   -   -   -    -    -    -    -    -
2 п   7   10  -    -    -    -    -    -
3 -   п   10  -    -    16   34   -    -    
4 -   -   п   -    41   16   -    -    - из b путь короче чем из с
5 -   -   -   -    -    п    -    27   -
6 -   -   -   44   -    -    -    п    42
7 -   -   -   44   -    -    34   -    п из b путь кочоче чем из i; bp h путь короче чем из I
8 -   -   -   -    -    -    п    -    -
9 -   -   -   п    -    -    -    -    -
10-   -   -   -    41   -    -    -    -
  0   7   10  44   41   16   34   27   42
*/

int main() {
	int graph[30][3] = { {1,2,7}, {1,3,10}, {2,1,7},{2,6,9},{2,7,27},
						 {3,1,10},{3,6,8},{3,5,31},{4,5,32},{4,8,17},
						 {4,9,21},{5,3,31},{5,4,32},{6,3,8},{6,8,11},
						 {6,2,9},{7,2,27},{7,9,15},{8,6,11},{8,4,17},
						 {8,9,15},{9,4,21},{9,8,15},{9,7,15} };
	int RoadToPoint[81][3]; //мысль такая, начальная точка, куда надо, путь
	int VisitedPoints[9] = {0,0,0,0,0,0,0,0,0}; // позиция в массиве это номер точки

	DeykstrFunc(graph, VisitedPoints, RoadToPoint);

	return 0;
}

