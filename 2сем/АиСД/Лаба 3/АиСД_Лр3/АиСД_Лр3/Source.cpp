#include <iostream>

using namespace std;

int main() {
	setlocale(LC_CTYPE, "Russian");

	int *A, *B, *C, *D, *E;

	int t[25];

	int N;

	cout << "Введите размер массива: ";

	cin >> N;

	A = new int[N];
	B = new int[N];
	C = new int[N];
	D = new int[N];
	E = new int[N];

	//заполнение массива А сулчайными значениями
	srand(time(0));
	
	for (int j = 0; j < N; j++) {
		A[j] = rand() % 100;
		cout << A[j] << endl;
	}

	//копирование массива А в массивы B, C, В, E
	for (int j = 0; j < N; j++) {
		E[j] = D[j] = C[j] = B[j] = A[j];
	}

	//Сортировка массива B пузырьком
	int buff;
	for (int i = 0; i < N - 1; i++) {
		for (int j = 0; j < N - i - 1; j++) {
			if (B[j] > B[j + 1]) {
				// меняем элементы местами
				buff = B[j];
				B[j] = B[j + 1];
				B[j + 1] = buff;
			}
		}
	}

	//вывод отфильтрованного массива B
	cout << '\n' << "Сортировка пузырьком" << endl;
	for (int j = 0; j < N; j++)
		cout << B[j] << endl;

	//Сортировка массива C методом Шелла
	for (int s = N / 2; s > 0; s /= 2) {
		for (int i = s; i < N; ++i) {
			for (int j = i - s; j >= 0 && C[j] > C[j + s]; j -= s) {
				int temp = C[j];
				C[j] = C[j + s];
				C[j + s] = temp;
			}
		}
	}

	//вывод отфильтрованного массива C
	cout << '\n' << "Сортировка методом Шелла" << endl;
	for (int j = 0; j < N; j++)
		cout << C[j] << endl;
	
	cout << "Сортировка выбора" << endl;
	////////////Сортировка выбора

	int min = 0;	// для записи минимального значения

	for (int i = 0; i < N; i++) {

		min = i; // запомним номер текущей ячейки, как ячейки с минимальным значением

		// в цикле найдем реальный номер ячейки с минимальным значением
		for (int j = i + 1; j < N; j++)
			min = (D[j] < D[min]) ? j : min;
		// cделаем перестановку этого элемента, поменяв его местами с текущим
		if (i != min)
		{
			buff = D[i];
			D[i] = D[min];
			D[min] = buff;
		}
	}
	for (int i = 0; i < N; i++) {
		cout << D[i] << endl;
	}
	//Конец сортировки

	cout << "Быстрая сортировка " << endl;
	//// Быстрая сортировка 

		//Указатели в начало и в конец массива
	int i = 0;
	int j = N - 1;

	//Центральный элемент массива
	int mid = E[N / 2];

	//Делим массив
	do {
		//Пробегаем элементы, ищем те, которые нужно перекинуть в другую часть
		//В левой части массива пропускаем(оставляем на месте) элементы, которые меньше центрального
		while (E[i] < mid) {
			i++;
		}
		//В правой части пропускаем элементы, которые больше центрального
		while (E[j] > mid) {
			j--;
		}

		//Меняем элементы местами
		if (i <= j) {
			int tmp = E[i];
			E[i] = E[j];
			E[j] = tmp;

			i++;
			j--;
		}
	} while (i <= j);
	for (int i = 0; i < N; i++) {
		cout << E[i] << endl;
	}

}